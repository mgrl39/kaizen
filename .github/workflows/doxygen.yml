name: Generate Doxygen Docs

on:
  push:
    branches:
      - main
      - docs
      - testing

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  generate-docs:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Doxygen
        run: sudo apt-get install -y doxygen graphviz

      - name: Generate documentation with Doxygen
        run: |
          # Generar la documentación
          doxygen Doxyfile || { echo "❌ Doxygen generation failed"; exit 1; }

          # Mover todo el contenido de html/ a un directorio temporal
          mv html/* /tmp/docs/ || true

          # Crear vercel.json
          cat > /tmp/docs/vercel.json << 'EOL'
          {
            "version": 2,
            "buildCommand": false,
            "installCommand": false,
            "framework": null,
            "builds": [
              {
                "src": "**/*",
                "use": "@vercel/static"
              }
            ],
            "routes": [
              {
                "src": "/(.*)",
                "dest": "/$1"
              }
            ],
            "github": {
              "silent": true,
              "autoAlias": true
            }
          }
          EOL

          # Crear package.json
          cat > /tmp/docs/package.json << 'EOL'
          {
            "private": true,
            "scripts": {
              "build": "echo 'No build required'"
            }
          }
          EOL

      - name: Debug Information
        run: |
          echo "Checking documentation files..."
          ls -la /tmp/docs/ || true

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        env:
          ACTIONS_STEP_DEBUG: true
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: /tmp/docs
          force_orphan: true
          commit_message: 'docs: update documentation'
